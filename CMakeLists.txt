cmake_minimum_required(VERSION 3.14)
project(LeetCode)
message(STATUS "CMake version: ${CMAKE_VERSION}")

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_C_STANDARD 99)

set(CMAKE_EXPORT_COMPILE_COMMANDS   ON)
set(CMAKE_VERBOSE_MAKEFILE          OFF)

include(${CMAKE_SOURCE_DIR}/cmake/get_cmake_preset.cmake)

if (MSVC)
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MDd")
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MD")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MDd")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MD")
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR (${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang"))
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -g3 -O0")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g3 -O0")
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")
    add_compile_options("-Wall" "-Wconversion" "-Wextra" "-pedantic")
endif()

if (${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang" AND WIN32)
    add_compile_options(--target=x86_64-pc-windows-msvc)
endif()

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Debug CACHE STRING "Default CMAKE_BUILD_TYPE Debug" FORCE)
endif()


if (${CMAKE_INSTALL_PREFIX} STREQUAL "C:/Program Files (x86)/${PROJECT_NAME}" OR ${CMAKE_INSTALL_PREFIX} STREQUAL "/usr/local")
    set(CMAKE_INSTALL_PREFIX "${CMAKE_SOURCE_DIR}/release/${CMAKE_PRESET}" CACHE PATH "Default CMAKE_INSTALL_PREFIX out/install/${CMAKE_PRESET}" FORCE)
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

set(EXTERNAL_CODE_DIR ${CMAKE_SOURCE_DIR}/code)

set(EXTERNAL_STAMP_DIR ${CMAKE_SOURCE_DIR}/stamp/${CMAKE_PRESET})
set(EXTERNAL_CACHE_DIR ${CMAKE_SOURCE_DIR}/out)
set(EXTERNAL_PREFIX_DIR ${EXTERNAL_CACHE_DIR}/external_prefix/${CMAKE_PRESET})
set(EXTERNAL_BUILD_DIR ${EXTERNAL_CACHE_DIR}/external_build/${CMAKE_PRESET})

set(EXTERNAL_INSTALL_DIR ${CMAKE_INSTALL_PREFIX})
set(EXTERNAL_CONFIG_SOURCE_DIR ${CMAKE_SOURCE_DIR}/cmake/config)
set(EXTERNAL_CONFIG_INSTALL_DIR ${EXTERNAL_INSTALL_DIR}/cmake)


include(${CMAKE_SOURCE_DIR}/cmake/cmake_configure_info.cmake)

set(EXTERNAL_CFG ${CMAKE_SOURCE_DIR}/cmake/external_project)

include(${EXTERNAL_CFG}/utils.cmake)
include(${EXTERNAL_CFG}/googletest.cmake)
include(${EXTERNAL_CFG}/cjson.cmake)

if (NOT (WIN32 AND NOT MINGW))
    include(${EXTERNAL_CFG}/mockcpp.cmake)
endif()
