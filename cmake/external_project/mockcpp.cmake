include(ExternalProject)

set(MOCKCPP_NAME mockcpp)

set(MOCKCPP_PREFIX_DIR  ${EXTERNAL_PREFIX_DIR}/${MOCKCPP_NAME})
set(MOCKCPP_SRC_DIR     ${EXTERNAL_CODE_DIR}/${MOCKCPP_NAME})
set(MOCKCPP_BUILD_DIR   ${EXTERNAL_BUILD_DIR}/${MOCKCPP_NAME})
set(MOCKCPP_INSTALL_DIR ${EXTERNAL_INSTALL_DIR}/${MOCKCPP_NAME})
set(MOCKCPP_STAMP_DIR   ${EXTERNAL_STAMP_DIR}/${MOCKCPP_NAME})

set(MOCKCPP_GIT_URL "https://github.com/sinojelly/mockcpp.git")
set(MOCKCPP_GIT_TAG "master")

if (EXISTS ${MOCKCPP_SRC_DIR})
    ExternalProject_Add(
        ${MOCKCPP_NAME}

        PREFIX      ${MOCKCPP_PREFIX_DIR}
        SOURCE_DIR  ${MOCKCPP_SRC_DIR}
        BINARY_DIR  ${MOCKCPP_BUILD_DIR}
        STAMP_DIR   ${MOCKCPP_STAMP_DIR}

        CMAKE_ARGS
            -DCMAKE_INSTALL_PREFIX=${MOCKCPP_INSTALL_DIR}
            -DCMAKE_GENERATOR=${CMAKE_GENERATOR}
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
            -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
            -DCMAKE_CXX_STANDARD=14
            -DCMAKE_CXX_STANDARD_REQUIRED=ON
    )
else()
    ExternalProject_Add(
        ${MOCKCPP_NAME}

        GIT_REPOSITORY  ${MOCKCPP_GIT_URL}
        GIT_TAG         ${MOCKCPP_GIT_TAG}

        PREFIX          ${MOCKCPP_PREFIX_DIR}
        SOURCE_DIR      ${MOCKCPP_SRC_DIR}
        BINARY_DIR      ${MOCKCPP_BUILD_DIR}
        STAMP_DIR       ${MOCKCPP_STAMP_DIR}

        CMAKE_ARGS
            -DCMAKE_INSTALL_PREFIX=${MOCKCPP_INSTALL_DIR}
            -DCMAKE_GENERATOR=${CMAKE_GENERATOR}
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
            -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
            -DCMAKE_CXX_STANDARD=14
            -DCMAKE_CXX_STANDARD_REQUIRED=ON

        UPDATE_COMMAND ""
    )
endif()
